# -*- coding: utf-8 -*-
"""fashion-and-mnist-example.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K6tL2UdI4N4eKtOvzk2tcHxB7kQzenS3
"""

"Import data DataSet"

import tensorflow as tf
import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler

mnist = tf.keras.datasets.mnist
"Load fashion mnist dataset"
fashion_dataset = tf.keras.datasets.fashion_mnist
"Load mnist dataset"
mnist = tf.keras.datasets.mnist

(mimages , mtargets) , (mimages_test,mtargets_test) = mnist.load_data()
#(images , targets) , (images_test,targets_test) = fashion_dataset.load_data()

"Flatten"
#images = images.reshape(-1,784)
#images = images.astype(float)


mimages = mimages.reshape(-1,784)
mimages = mimages.astype(float)



#images_test = images_test.reshape(-1,784)
#images_test = images_test.astype(float)

mimages_test = mimages_test.reshape(-1,784)
mimages_test = mimages_test.astype(float)

"Normalize data"

#scaler = StandardScaler()
#images = scaler.fit_transform(images)
#images_test = scaler.transform(images_test)



scaler = StandardScaler()
mimages = scaler.fit_transform(mimages)
mimages_test = scaler.transform(mimages_test)

"Create model"

modelm = tf.keras.Sequential()

modelm.add(tf.keras.layers.Dense(256,activation="relu"))
modelm.add(tf.keras.layers.Dense(126, activation="relu"))
modelm.add(tf.keras.layers.Dense(10,activation="softmax"))

"Compile model"
#model.compile(loss="sparse_categorical_crossentropy",optimizer="sgd",metrics=["accuracy"])
modelm.compile(loss="sparse_categorical_crossentropy",optimizer="sgd",metrics=["accuracy"])

"Fit model"
#model.fit(images,targets , epochs=10,validation_split=0.2)
modelm.fit(mimages,mtargets , epochs=10,validation_split=0.2)

loss , acc = modelm.evaluate(mimages_test , mtargets_test)
print("Accuracy :" , acc )
print(" Loss : " , loss)

